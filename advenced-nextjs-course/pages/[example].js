import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

//* codedamn.com/dynamic -> getServerSideProps
//* codedamn.com/static -> NO getServerSideProps

//* build:

//* MARK AS SSR -> /dynamic
//* MARK AS completely static -> /static

//! Yani dynamic olan yani örneğin bir fetch işlemi gibi işlemlerde her zaman ilk olarak getSErverSideProps çalışır sonra props'ları ana functiona gönderir.
//! server tarafındaki olayları bu getSErverSideProps ile müdahale edebiliriz.
//! Örneğin parametre olarak context arka tarafta olan işlerin bi obje ile döndürür. context.res.status = 404 komutu çalıştırırsak -
//! gelen cevap 404 olacaktır.

//! context.res.write(JSON.stringify({ something: 'cool' }))
//!  context.res.end() ------------> bu iki kod ile gelen cevaba object içinde cool yazabiliriz.
export async function getServerSideProps(context) {
  // console.log('check', process.env.SPECIFICIY_CHECK)

  //   const db = await connectToDB()
  // const rows = db.fetchRow()
  console.log(context)
  // console.log(context.query.example)

  // context.res.statusCode = 418
  // context.res.write(JSON.stringify({ something: 'cool' }))
  // context.res.end()


  const data = (await fetch('https://google.com').then((t) => t.text())).slice(
    0,
    200
  )

  return {
    // props: {}
    // redirect: {
    //   destination: 'http://google.com/',
    //   permanent: true //308 307
    //   // 301 302
      
    // }

    props: {
      something: 1,
      googleFirst200Chars: data
    }
  }
}

//! server (SSR) + client(hydration)
export default function Home(props) {
  /* console.log(
    'env value: ',
    process.env.SECRET_VARIABLE,
    process.env.NEXT_PUBLIC_MY_FIRST_BROWSERVARIABLE
  ) */

  const { rows } = props

  return (
    <div className={styles.container}>
      <Head>
        <title>Create {props.something} Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <pre>{props.googleFirst200Chars}</pre>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
